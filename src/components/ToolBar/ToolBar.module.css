.component {
    flex: 1;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 1em;
    max-width: 20em;

    &>ul {
        display: flex;
        flex-direction: column;
        gap: 1em;
        flex-wrap: wrap;

        & li {
            color: #e0e0e0;
            display: flex;
            border: 1px dashed #3e3e3e;
            border-radius: .5em;
            transition: .3s;

            &:hover:has(button:not(:disabled)),
            &.clicked,
            &[data-enabled="true"] {
                border-color: #626262;
            }

            & label:has(button:disabled):hover {
                cursor: not-allowed;
            }

            label {
                cursor: pointer;
                flex: 1;
                display: flex;
                align-items: center;
                gap: 1em;
                opacity: .8;
                transition: .3s;
                padding: .6em 2.5em .6em 1em;
                background: linear-gradient(to bottom right, rgb(70 70 70), rgb(45, 45, 45));
                border-radius: inherit;
                box-shadow: inset 0px 0px 10px rgba(0, 0, 0, .15);
                user-select: none;

                button {
                    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
                }

                span {
                    font-size: 1.4em;
                    font-weight: 100;
                    letter-spacing: .5px;
                }

                &:active button:not(:disabled) {
                    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 7px -3px, rgba(0, 0, 0, 0.2) 0px 0px 0px inset;
                    transform: scale(.95);
                }
            }

            &:hover label:has(button:not(:disabled)),
            &.clicked label,
            &[data-enabled="true"] label {
                opacity: 1;
                box-shadow: unset;
                /* background: linear-gradient(to bottom right, rgb(70 70 70), rgb(45, 45, 45)); */
            }

            &.clicked label button,
            &[data-enabled="true"] label button {
                opacity: 1;
            }

            &.clicked,
            &[data-enabled="true"] {
                position: relative;
                border-style: solid;
            }

            &:active:has(button:not(:disabled)) {
                border-style: solid;
            }

            &.clicked::before,
            &[data-enabled="true"]::before {
                content: '';
                --size: .5em;
                width: var(--size);
                height: var(--size);
                background: #e0e0e0;
                border-radius: 50%;
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                right: 1em;
                box-shadow: 0px 0px 10px #c2c2c2;
            }

        }
    }

    @media (max-width: 1000px) {
        & {
            width: 100%;
            max-width: unset;
            flex: unset;
            flex-direction: row;

            & ul {
                flex-direction: row;
            }

            li {
                width: fit-content;

                label {
                    padding: .5em !important;
                }

                & span {
                    display: none;
                }
            }
        }
    }
}